name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-2025, ubuntu-latest ]
    steps:
    - uses: actions/checkout@v5
    
    # Use OpenSSL on Windows. It is the ShiningLight.OpenSSL.Dev package.
    - name: Set openssl environment variables
      if: runner.os == 'Windows'
      run: |
        echo "OPENSSL_DIR=C:/Program Files/OpenSSL" >> $env:GITHUB_ENV
        echo "OPENSSL_LIB_DIR=C:/Program Files/OpenSSL/lib/VC/x64/MDd" >> $env:GITHUB_ENV
      shell: pwsh

    - name: Install rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: 1.89.0
        components: rustfmt, clippy
    
    - uses: taiki-e/install-action@protoc

    - uses: taiki-e/install-action@cargo-llvm-cov

    - name: Run cargo check
      run: cargo check

    - name: Run cargo fmt
      run: cargo fmt --all -- --check
    
    - name: Run cargo clippy
      run: cargo clippy --all-targets -- -D warnings
    
    - name: Run cargo test
      run: cargo test --all -- --nocapture

    - name: Run llvm-cov
      run: cargo llvm-cov --codecov --output-path codecov.json --ignore-filename-regex tonic-tls-tests.*

    - name: Show cov summary
      run: cargo llvm-cov report --summary-only --ignore-filename-regex tonic-tls-tests.*

    - name: Upload Report to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: ./codecov.json
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }} # required